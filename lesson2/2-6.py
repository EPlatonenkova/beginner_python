# создаём стандартную функцию для создания товара в корзину
def create_good(i):
    name = input("Название продукта ")
    price = int(input("Цена продукта "))
    amount = int(input("Количество продукта "))
    dim = input('Еденица измерения продукта ')

    current_good = {"название": name, "цена": price, "количество": amount, "ед": dim}
    return i, current_good


goods = []  # объявляем пустой список товаров в корзине

# пока пользователь не введет exit он будет добавлять товар в корзину
while input("Добавляем новый продукт в корзину\n"
            "Введите exit для выхода из создания списка\n"
            "или нажмите ввод для продолжения:") != "exit":
    good = create_good(len(goods) + 1)  # функция будет возвращать новый товар
    print(f'Вы добавили {good}\n')
    goods.append(good)  # Добавляем товар к остальным и продолжаем цикл

print("\n\nВ корзине следующие товары:")

for i in goods:
    print(i)                     # выводим все товары в корзине по очереди
print("\n")

first = goods[0]                 # чтобы понять структуру ключей товаров берем первый элемент в корзине

first_key, first_val = first     # раскладываем первый элемент на ключ / словарь со значениями

keys = first_val.keys()          # из словаря получем список всех ключей

result = {}                      # объявляем итоговый пустой словарь значений структуры товаров

for k in keys:                   # проходим по всем ключам
    elem = []                    # в каждом цикле создаём пустой список значений для структуры
    for g_k, l in goods:         # проходим по всем товарам (как по словарю разложенному на ключ/значение)
        if l[k] not in elem:     # если значения еще нет в уникальном списке то мы его добавляем
            elem.append(l[k])
    result[k] = elem             # формируем словарь с итоговыми значениями (струтура товара / значения структуры)

for r in result:
    print(f'{r}:{result[r]}')

# я закипаю
